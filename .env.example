# Flask Configuration
# REQUIRED: Generate a secure secret key for session management and CSRF protection
# Run: python -c "import secrets; print(secrets.token_hex(32))" to generate a secure key
SECRET_KEY=c5c0202236a3bb5db0d7a2e4eea3d9dd7e9aafe2496fc15dd60414b44a9d6d53

# Database Configuration
# For SQLite (default): sqlite:///app.db
# For PostgreSQL: postgresql://username:password@localhost/database_name
# For MySQL: mysql://username:password@localhost/database_name
DATABASE_URL=sqlite:///app.db

# Flask Environment (development/testing/production)
FLASK_CONFIG=development

# Mail Configuration (for password reset emails)
# For Gmail, you need to use an App Password: https://support.google.com/accounts/answer/185833
MAIL_SERVER=smtp.googlemail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password-here
MAIL_DEFAULT_SENDER=your-email@gmail.com

# External API Keys
# OpenRouter API key for recipe suggestions
# Get your key from: https://openrouter.ai/
OPENROUTER_API_KEY=your-openrouter-api-key-here

# Security Settings (for production)
SESSION_COOKIE_SECURE=false
TALISMAN_FORCE_HTTPS=false

# Example values for production:
# SESSION_COOKIE_SECURE=true
# TALISMAN_FORCE_HTTPS=true